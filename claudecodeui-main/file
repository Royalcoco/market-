# build_apk.ps1
Write-Host "üì± Construction APK..."
./gradlew assembleDebug
Write-Host "‚úÖ APK g√©n√©r√© dans ./app/build/outputs/apk/debug"
# Launcher.ps1
Write-Host "[üöÄ INIT] Lancement du syst√®me modulaire IA"
Start-Process powershell -ArgumentList "cd ./backend; node server.js"
Start-Process powershell -ArgumentList "cd ./frontend; npm start"
Start-Process powershell -ArgumentList "cd ./ai_module; python ai_server.py"
Start-Process powershell -ArgumentList "cd ./apk_builder; ./build_apk.ps1"

# Imbrication - pr√©chargement biblioth√®ques
$libPath = "./bibliotheque_pre_antiq"
if (Test-Path $libPath) {
  Write-Host "[üìö] Chargement modules antiques..."
  Get-ChildItem $libPath -Recurse | ForEach-Object {
    Write-Host "‚Ü≥ Module $_ d√©tect√©"
  }
}

# Partage r√©seau local graphique
New-SmbShare -Name "GraphicalHub" -Path "$env:USERPROFILE\GraphicalHub" -FullAccess Everyone

# Console IA locale
Start-Process "http://localhost:5000/keyboard"
from flask import Flask, request, jsonify
app = Flask(__name__)

@app.route('/ia/console', methods=['POST'])
def analyse_console():
    data = request.json.get("input", "")
    response = f"[IA]: Re√ßu {len(data)} caract√®res, analyse oscillatoire en cours..."
    return jsonify({"response": response})

app.run(port=5001)
version: '3'
services:
  backend:
    build: ./backend
    ports: ["5000:5000"]
  ai:
    build: ./ai_module
    ports: ["5001:5001"]
  frontend:
    build: ./frontend
    ports: ["3000:3000"]
  hubgraph:
    image: nginx
    volumes:
      - ./hub:/usr/share/nginx/html
    ports: ["8080:80"]
// encryption.js
function encode81(char) {
  const code = char.charCodeAt(0);
  const offset = 81 - (code % 81);
  return (code + offset).toString(16);
}
' VBA pour Excel / Outlook interaction serveur IA
Sub EnvoyerVersIA()
  Dim http As Object
  Set http = CreateObject("MSXML2.XMLHTTP")
  Dim data As String: data = ThisWorkbook.Sheets(1).Range("A1").Value
  http.Open "POST", "http://localhost:5001/ia/console", False
  http.setRequestHeader "Content-Type", "application/json"
  http.send "{""input"":""" & data & """}"
  MsgBox http.responseText
End Sub
// encryption.js
function encode81(char) {
  const code = char.charCodeAt(0);
  const offset = 81 - (code % 81);
  return (code + offset).toString(16);
}
